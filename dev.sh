#!/usr/bin/env bash

# dev.sh - Script para inicializar o ambiente de desenvolvimento Quasar via Docker
# Agora considerando que todos os arquivos Docker est√£o em './docker/'

set -e  # Interrompe o script em caso de erro

# Cores ANSI
GREEN="\033[0;32m"
BLUE="\033[0;34m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
NC="\033[0m"  # Sem cor

# Diret√≥rio que cont√©m os arquivos Docker
docker_dir="./docker"
# Vari√°veis de configura√ß√£o
dev_image_name="quasar-dev:latest"
compose_file="${docker_dir}/docker-compose.yml"
dockerfile_dev="${docker_dir}/Dockerfile.dev"

# Fun√ß√£o para exibir erro e encerrar
function error_exit() {
  echo -e "${RED}‚úñ $1${NC}"
  exit 1
}

# 1) Verifica pr√©-requisitos de bin√°rios
echo -e "${BLUE}üîç Verificando instala√ß√£o de Docker e Docker Compose...${NC}"
command -v docker >/dev/null 2>&1 || error_exit "Docker n√£o encontrado. Instale o Docker antes de prosseguir."
command -v docker-compose >/dev/null 2>&1 || error_exit "Docker Compose n√£o encontrado. Instale o Docker Compose antes de prosseguir."
echo -e "${GREEN}‚úî Docker e Docker Compose est√£o instalados!${NC}"

# 2) Verifica status do Docker daemon
echo -e "\n${BLUE}‚è≥ Verificando se o Docker daemon est√° ativo...${NC}"
if ! docker info >/dev/null 2>&1; then
  error_exit "N√£o foi poss√≠vel conectar ao Docker daemon. Certifique-se de que o servi√ßo Docker esteja em execu√ß√£o."
fi
echo -e "${GREEN}‚úî Docker daemon ativo e respondendo!${NC}"

# 3) Verifica exist√™ncia dos arquivos Docker
echo -e "\n${BLUE}üîß Verificando presen√ßa de arquivos em '${docker_dir}'...${NC}"
[[ -f "${dockerfile_dev}" ]] || error_exit "Dockerfile de desenvolvimento n√£o encontrado em '${dockerfile_dev}'"
[[ -f "${compose_file}" ]]  || error_exit "docker-compose.yml n√£o encontrado em '${compose_file}'"
echo -e "${GREEN}‚úî Arquivos Docker encontrados!${NC}"

# 4) Constru√ß√£o da imagem de desenvolvimento
echo -e "\n${BLUE}[1/3]${NC} ${YELLOW}Construindo imagem de desenvolvimento${NC} ${GREEN}(${dev_image_name})...${NC}"
docker build \
  --file "${dockerfile_dev}" \
  --tag "${dev_image_name}" \
  .
echo -e "${GREEN}‚úî Imagem ${dev_image_name} constru√≠da com sucesso!${NC}"

# 5) Inicializa√ß√£o dos containers em modo dev
echo -e "\n${BLUE}[2/3]${NC} ${YELLOW}Subindo containers (hot-reload)...${NC}"
docker-compose -f "${compose_file}" up --build
echo -e "${GREEN}‚úî Containers iniciados com sucesso!${NC}"

# 6) Mensagem final
echo -e "\n${BLUE}[3/3]${NC} ${YELLOW}Ambiente de desenvolvimento pronto!${NC}"
echo -e "${YELLOW}üöÄ Acesse o Quasar Dev Server em:${NC} ${BLUE}http://localhost:8080${NC}\n"
# Para interromper o servi√ßo: Ctrl+C e, se necess√°rio, 'docker-compose down -f ${compose_file}'
